{"version":3,"sources":["components/AddCategory.js","components/GiftItem.js","helpers/getGifts.js","components/SearchedGifs.js","hooks/useFetchGift.js","components/GifExpert.js","index.js"],"names":["AddCategory","setCategorias","useState","value","setValue","onSubmit","e","preventDefault","cats","className","type","onChange","target","placeholder","GiftItem","title","url","id","src","style","height","backgroundColor","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","SearchedGifs","loading","state","setState","useEffect","then","imgs","useFetchGift","role","GifExpert","categorias","cat","ReactDOM","render","document","getElementById"],"mappings":"+KAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OACI,uBAAMC,SAPY,SAACC,GACnBA,EAAEC,iBACFN,GAAe,SAAAO,GAAI,OAAML,GAAN,mBAAgBK,OACnCJ,EAAS,KAIT,UACI,oBAAIK,UAAU,aAAd,qCACA,uBAAOC,KAAK,OAAOC,SAbD,SAACL,GACxBF,EAAUE,EAAEM,OAAOT,QAYoCA,MAAOA,EAAOM,UAAU,eAAeI,YAAY,oC,QClBpGC,EAAW,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,IAAc,EAATC,GAEnC,OACI,sBAAKR,UAAU,mEAAf,UAEI,qBAAKS,IAAKF,EAAKP,UAAU,yBAAyBU,MAAO,CAACC,OAAO,QAASC,gBAAiB,QAASC,IAAI,QACxG,qBAAKb,UAAU,YAAf,SACI,oBAAIA,UAAU,aAAd,SAA4BM,U,uBCQ7BQ,EAjBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAENT,EAFM,iDAE0CU,UAAUF,GAFpD,+DAGOG,MAAMX,GAHb,cAGNY,EAHM,gBAIYA,EAAKC,OAJjB,uBAIJC,EAJI,EAIJA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHjB,IAAG,UAAGiB,EAAIC,cAAP,aAAG,EAAYC,iBAAiBnB,IACnCC,GAAKgB,EAAIhB,GACTF,MAAQkB,EAAIlB,UAVR,kBAaLgB,GAbK,4CAAH,sDCKAK,EAAe,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAC3B,EAA4BtB,mBAAS,IAArC,mBAEA,GAFA,UCAwB,SAAEsB,GAC1B,MAA0BtB,mBAAS,CAC/B4B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACPjB,EAAQC,GAAUiB,MAAM,SAAAC,GACpBH,EAAS,CACLT,KAAMY,EACNL,SAAQ,SAIlB,IAEKC,EDdwBK,CAAanB,IAApCa,EAAR,EAAQA,QAAcK,EAAtB,EAAiBZ,KAEjB,OACI,eAAC,WAAD,WACI,qBAAIrB,UAAU,aAAd,cAA8Be,KAC9B,sBAAKf,UAAU,gEAAf,UAEQ4B,GACI,qCACA,uBAAO5B,UAAU,qDAAjB,0BACA,qBAAKA,UAAU,mCAAmCmC,KAAK,SAAS,cAAY,YAKhFF,EAAKV,KAAI,SAAAC,GACL,OAAO,cAAC,EAAD,eAA4BA,GAAZA,EAAIhB,cEDpC4B,EApBG,WAEd,MAAoC3C,mBAAS,CAAC,gBAAgB,gBAA9D,mBAAO4C,EAAP,KAAmB7C,EAAnB,KACA,OACI,eAAC,WAAD,WACI,oBAAIQ,UAAU,eAAd,0BACA,cAAC,EAAD,CAAaR,cAAgBA,IAC7B,uBACA,qBAAKQ,UAAU,WAAf,SACI,qBAAKA,UAAU,cAAf,SAEIqC,EAAWd,KAAK,SAAAe,GAAG,OAAI,cAAC,EAAD,CAA0BvB,SAAWuB,GAAjBA,c,MCT/DC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.ccbc2da8.chunk.js","sourcesContent":["import React, {useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategorias } ) => {\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n       setValue( e.target.value );\r\n    };\r\n\r\n    const handleOnSubmit= (e) => {\r\n        e.preventDefault();\r\n        setCategorias( cats => [ value, ...cats,]);\r\n        setValue('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit= {handleOnSubmit}>\r\n            <h5 className=\"text-light\">Añadir Categoría:</h5>\r\n            <input type=\"text\" onChange={ handleInputChange } value={value} className=\"form-control\" placeholder=\"Escribe una nueva categoria\" />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategorias : PropTypes.func.isRequired,\r\n}","import React from 'react'\r\n\r\nexport const GiftItem = ( {title, url, id} ) => {\r\n   \r\n    return (\r\n        <div className=\"card card-style border-0 m-2 animate__animated animate__fadeInUp\" >\r\n        \r\n            <img src={url} className=\"card-img-top img-fluid\" style={{height:'190px', backgroundColor: 'blue'}} alt=\"...\"/>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{title}</h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const getGifs = async( category ) => {\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=b5CZOqdeAIv6HKAYg263v1iJVSYXbKVw`;\r\n    const resp = await fetch(url);\r\n    const { data  } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            url : img.images?.downsized_medium.url,\r\n            id : img.id,\r\n            title : img.title,\r\n        }\r\n    });\r\n    return gifs;\r\n\r\n}\r\n\r\nexport default getGifs;","import React, { Fragment, useState } from 'react'\r\nimport { GiftItem } from './GiftItem';\r\nimport { useFetchGift } from '../hooks/useFetchGift';\r\n\r\n\r\nexport const SearchedGifs = ( {category} ) => {\r\n    const [images, setImages] = useState([]);\r\n\r\n    const { loading, data:imgs } = useFetchGift(category);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h5 className=\"text-light\"> { category }</h5>\r\n            <div className=\"d-flex flex-wrap p-0 w-100 justify-content-center text-center\">\r\n                {\r\n                    loading && (\r\n                        <>\r\n                        <small className=\"text-primary my-1 animate__animated animate__flash\">Buscando... </small>\r\n                        <div className=\"spinner-border text-primary mx-1\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </>\r\n                    )\r\n                }\r\n                {\r\n                    imgs.map(img => {\r\n                        return <GiftItem  key={img.id} {...img}  />;\r\n                    })\r\n                }\r\n            </div>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport getGifs from \"../helpers/getGifts\";\r\n\r\n\r\n\r\n\r\nexport const useFetchGift = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( ()=> {\r\n        getGifs(category).then( imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading:false,\r\n            });\r\n        });\r\n\r\n    },[]);\r\n\r\n    return state;\r\n}\r\n\r\n","import React, { Fragment, useState } from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { SearchedGifs } from './SearchedGifs';\r\nconst GifExpert = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['HunterXHunter','Dragon Ball',]);\r\n    return (\r\n        <Fragment>\r\n            <h2 className=\"text-primary\">GifExpertApp</h2>\r\n            <AddCategory setCategorias={ setCategorias } />\r\n            <hr></hr>\r\n            <div className=\"row mx-0\">\r\n                <div className=\"col-12 px-0\">\r\n                {\r\n                    categorias.map( cat => <SearchedGifs key={ cat } category={ cat } /> )\r\n                }\r\n                </div>\r\n            </div>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default GifExpert\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpert from './components/GifExpert';\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpert />\n,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}